# Generated by Django 2.2.1 on 2020-06-06 21:31

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.IntegerField(unique=True)),
                ('password', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('min_quantity', models.IntegerField(default=0)),
                ('max_quantity', models.IntegerField(default=0)),
                ('price_per_item', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('state', models.CharField(choices=[('Done', 'Done'), ('Live', 'Live'), ('Closed', 'Closed')], max_length=10)),
                ('closed_date', models.DateTimeField()),
                ('expected_delivery_date', models.DateTimeField()),
                ('users', models.ManyToManyField(to='essentials_kit_management.User')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('item_description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Form')),
            ],
        ),
        migrations.CreateModel(
            name='SectionItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_cost', models.IntegerField(default=0)),
                ('quantity_selected', models.IntegerField(default=0)),
                ('brand_selected', models.CharField(default='brand', max_length=100)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Form')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Item')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Section')),
            ],
        ),
        migrations.CreateModel(
            name='OrderedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_closed', models.BooleanField(default=False)),
                ('delivered_items', models.IntegerField(default=0)),
                ('quantity', models.IntegerField()),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Brand')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.User')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Section'),
        ),
        migrations.CreateModel(
            name='FormUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_items', models.IntegerField(default=0)),
                ('pending_items', models.IntegerField(default=0)),
                ('cost_incurred', models.IntegerField(default=0)),
                ('total_cost_estimate', models.IntegerField(default=0)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Form')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.User')),
            ],
        ),
        migrations.AddField(
            model_name='brand',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='essentials_kit_management.Item'),
        ),
    ]
